metadata:
  title: Small claims complaint
  short title: Small claims complaint
  comment: This program makes the forms to sue someone for up to $10,000. It can be used to sue a landlord for a security deposit.
  authors:
    - Vivian McNaughton
    - Matt Newsted
---
include:
  - docassemble.AssemblyLine:assembly_line.yml
  - docassemble.ALToolbox:phone-number-validation.yml
  - docassemble.ILAO:ilao-interview-framework.yml
  - docassemble.ILAO:shared-basic-questions.yml
---
objects:
  - users: ALPeopleList.using(there_are_any=True)
  - filing_location: ALAddress
  - other_parties: ALPeopleList.using(object_type=ALIndividual, complete_attribute=['complete'], there_are_any=True, maximum_number=9)
  - other_parties[i].agent: ALIndividual
  - other_parties[i].service_address: ALAdress
  - other_parties[i].alt_service_address: ALAddress
---
code: |
  ilao_easy_form_title = "Small claims complaint"
  ilao_easy_form_url = "https://www.illinoislegalaid.org/legal-information/small-claims-complaint"
  github_user = 'IllinoisLegalAidOnline'
  github_repo_name = 'docassemble-SmallClaimsComplaint'
---
# Road map
sections:
  - section_intro: Start
  - section_case: About the case
  - section_defendants: Defendants
  - section_about_you: About you
  - section_download: Download
---
# interview order block
mandatory: True
code: |
  nav.set_section('section_intro')
  user_ask_role = "plaintiff"
  sees_nav_bar
  set_progress(5)
  how_to_use
  accept_terms
  small_claims_explainer
  to_consider
  if age_check == False:
    age_kickout
  nav.set_section('section_case')
  if corporation_check == True:
    corporation_kickout
  if money_check == True:
    money_kickout
  if amount_check > 10000:
    amount_kickout
  filing_location.county_number
  filing_location.get_county
  if filing_location.county == "Cook County":
    if amount_check < 3000.01:
      daley_center_note
  nav.set_section('section_defendants')
  other_parties.gather()
  if other_parties.number_gathered() == 9:
    blank_summons_check
  if landlord_check == True:
    under_construction
  else:
    if agreement_check == True:
      if attach_check == False:
        attach_explain
    demand_check
    claim_reason
  for person in other_parties:
    person.person_catch
    if person.agent_check == True:
      person.agent.name.first
    if person.same_address != True:
      person.service_address.address
    person.service_phone
    person.service_email
    if person.alt_delivery == True:
      person.alt_service_address.address
      person.alt_service_phone
      person.alt_service_email
      person.service_method
  nav.set_section('section_about_you')
  users[0].name.first
  users[0].address.address
  users[0].address.county_correct
  users[0].phone_number
  users[0].email
  e_signature
  nav.set_section('section_download')
  get_docs_screen
---
code: |
  other_parties[i].name.first
  other_parties[i].address.address
  other_parties[i].complete = True
---
id: welcome
question: |
  Small claims complaint
subquestion: |
  Welcome to Illinois Legal Aid Online's **Small claims complaint** Easy Form.

  This program makes the forms to sue a person or business for up to $10,000. It can be used to sue a landlord for a security deposit.
field: sees_nav_bar
---
id: how to use
continue button field: how_to_use
question: |
  Instructions
subquestion: |
  
  To use this program you will need to know:

  To complete this program, you will need to know:

  * The name and address of the person or business you are suing, and
  * The reasons you are suing them.
  
  If you are suing your former landlord to return your security deposit, you need to know:
  
  * The name and address of your former landlord,
  * The dates you moved in and moved out of the apartment,
  * The amount and date of security deposit payments you made, and
  * The date you sent your demand letter to the landlord.

  Set aside 10 to 20 minutes to finish this program. You can log in and save your work to return to later. 
  
  ${ collapse_template(help_example) }  

  Click on **{green words}** to learn what they mean. Some questions have a question mark in a circle ${ fa_icon("question-circle", color_css="#0dcaf0" ) } that also gives help.
---
template: help_example

subject: |

  **You can expand sections like this to show more information.**

content: |  

  This is an example of help. Click again to hide.
---
id: small claims explainer
continue button field: small_claims_explainer
question: |
  About small claims court
subquestion: |
  Small Claims Court is a place where you can sue a person or business for $10,000 or less. The case may be based on an agreement or the fact that someone has harmed you or your property.

  Examples of cases that can be filed in Small Claims Court include:

  * Someone physically injured you or damaged your property and refuses to pay for your loss,
  * Your landlord refuses to return your security deposit,
  * Someone owes you money for work you have done, but refuses to pay you, or
  * You paid for work to be done, but the work was done poorly and the contractor refuses to fix it.
---
id: considerations
continue button field: to_consider
question: |
  Before filing a small claims complaint
subquestion: |
  Here are some things to consider before filing a Small Claims Complaint:

  * Try contacting the other person or business to solve the problem out of court. If you are successful, you save time, effort, and expense. Call or write the other party to explain your position and the settlement you want.
  * Consider whether the person or business has money, income, or property. If they do not have any money, you may not be able to collect even if the judge decides they owe you money.
  
  To learn more, read ILAO's article about [**your options before filing a small claims case**](https://www.illinoislegalaid.org/legal-information/what-consider-filing-small-claims-case).
---
id: user name
question: |
  What is your name?
fields:
  - First: users[0].name.first
  - Middle: users[0].name.middle
    required: False
  - Last: users[0].name.last
  - Suffix: users[0].name.suffix
    required: False
---
id: user address
question: |
  What is your mailing address?
fields:
  - Street address: users[0].address.address
    address autocomplete: True
  - Address line 2: users[0].address.unit
    required: False
  - City: users[0].address.city
  - State: users[0].address.state
    code: |
      states_list() 
  - ZIP code: users[0].address.zip
  - County: users[0].address.county
---
sets:
  - users[0].phone_number
  - users[0].email
id: your contact information
question: |
  What is your phone number and email address?
subquestion: |
  This information can help the court contact you.  
fields:
  - Phone number: users[0].phone_number
    datatype: al_international_phone
    required: False
  - Email: users[0].email
    datatype: email
    required: False
validation code: |
  if (not showifdef('users[0].phone_number') and \
      (not showifdef('users[0].email'))):
    validation_error(word("You need to provide at least one contact method."), field="users[0].email")
---
id: age check
question: |
  Are you 18 years old or older?
fields:
  - no label: age_check
    datatype: yesnoradio
---
id: age kickout
event: age_kickout
question: |
  Sorry
subquestion: |
  You must be 18 years old or older to use this program.
buttons:
  - Exit: exit
  - Restart: restart
---
id: corporation check
question: |
  Are you filing a suit for a corporation or another organization?
fields:
  - no label: corporation_check
    datatype: yesnoradio
---
id: corporation kickout
event: corporation_kickout
question: |
  Sorry
subquestion: |
  You must be suing as a person, not on behalf of a corporation, to use this program.

  Corporations can sue in Small Claims Court, but they need to be represented by a lawyer.
buttons:
  - Exit: exit
  - Restart: restart
---
id: money only check
question: |
  Are you suing for anything else besides money?
subquestion: |
  Small Claims judges can order a judgment only for money.

  The judge cannot require a person or business to do something or stop doing something, or to return property.
fields:
  - no label: money_check
    datatype: yesnoradio
---
id: money only kickout
event: money_kickout
question: |
  Sorry
subquestion: |
  You can only sue for money in Small Claims Court.

  The Small Claims judge cannot require a person or business to do something or stop doing something, or to return property.
buttons:
  - Exit: exit
  - Restart: restart
---
id: amount check
question: |
  How much money are you suing for?
subquestion: |
  Do not include court costs in this amount.

  If you are suing your landlord to return a security deposit, there will be more questions to figure out what you can claim. For now, enter the amount of security deposit your landlord owes you.
fields:
  - Amount owed: amount_check
    datatype: number
    step: 0.01
---
id: amount kickout
event: amount_kickout
question: |
  Sorry
subquestion: |
  You can only sue for $10,000 or less in Small Claims Court.
buttons:
  - Exit: exit
  - Restart: restart
---
id: filing county
question: |
  In which county are you filing your complaint?
subquestion: |
  If you are suing a former landlord to return your security deposit, you should file in the county:

  * Where the apartment is,
  * Where the landlord lives, or
  * Where the landlord has an office.

  ${ collapse_template(county_lookup_help) }
fields:
  - County: filing_location.county_number
    code: |
      ilao_court_county_lookup(court_list)
validation code: |
  if filing_location.county_number == "-1":
    list_reference = court_list.as_court('trial_court', 15)
  else:
    list_reference = court_list.as_court('trial_court', filing_location.county_number)
---
depends on:
  - filing_location.county_number
code: |  
  filing_location.county = list_reference.address.county + " County" 
  filing_location.get_county = True
---
id: daley center note
continue button field: daley_center_note
question: |
  Free help at the Daley Center
subquestion: |
  Since you are suing in Cook County for $3,000 or less, you can [**get free help at the Daley Center's Pro Se Filing Desk**](http://www.cookcountycourt.org/ABOUTTHECOURT/MunicipalDepartment/FirstMunicipalDistrict-Chicago/ProSeSmallClaimsCourt.aspx).
---
#Note: may need to change this so that a non-incorporated business's name and owner's name are associated with the same indvidual within other_parties
sets:
  - other_parties[i].name.first
id: defendant name
question: |
  What is the ${ordinal(i)} defendant's name?
subquestion: |
  In Small Claims Court, the person filing the case is the plaintiff. The person or company that the plaintiff is suing is the defendant. There can be more than one Defendant.

  You cannot collect money against a defendant who is incorrectly named on the Small Claims Complaint.
  
  If you are suing an unincorporated business, a sole proprietorship, or a general partnership, you should list both the business and the business owner as defendants.
  
fields:
  - code: |
      other_parties[i].name_fields(person_or_business='unsure')
---
sets:
  -other_parties[i].address.address
id: defendant address
question: |
  What is ${other_parties[i].name.full(middle='full')}'s address?
subquestion: |
  % if other_parties[i].person_type == "business":
  You can find the address of some businesses on the [**Illinois Secretary of State's website**](https://apps.ilsos.gov/businessentitysearch/).
  % endif
fields:
  - Street address: other_parties[i].address.address
    address autocomplete: True
  - Address line 2: other_parties[i].address.unit
    required: False
  - City: other_parties[i].address.city
  - State: other_parties[i].address.state
    code: |
      states_list()
  - ZIP code: other_parties[i].address.zip
---
id: more than 9 defendants
question: |
  Are there any more defendants?
subquestion: |
  This program makes the *Summons* forms for the 9 defendants.
  
  You will need to fill out *Summons* forms for any other defendantsin your case. 
  
  If you choose **Yes**, you can download blank *Summons* forms at the end of this program.
fields:
  - "Anyone else?": blank_summons_check
    datatype: yesnoradio
---
id: any other defendants
question: |
  Do you have any other defendants to tell us about?
subquestion: |
  So far you have told us about ${comma_and_list(other_parties.complete_elements().full_names())}.
fields:
  - "Anyone else?": other_parties.there_is_another
    datatype: yesnoradio
---
id: landlord check
question: |
  Are you suing your former landlord to return a security deposit?
fields:
  - no label: landlord_check
    datatype: yesnoradio
---
id: under construction
continue button field: under_construction
question: |
  Under construction
---
id: agreement check
question: |
  % if other_parties.number_gathered() > 1:
  Do you have a written agreement with the defendants?
  % else:
  Do you have a written agreement with ${other_parties[0].name.full(middle='full')}?
  % endif
subquestion: |
  This could be a contract or some other proof of an agreement. 
  
  A receipt of a purchase can be a written agreement.
fields:
  - no label: agreement_check
    datatype: yesnoradio
---
id: attach check
question: |
  Will you attach your written agreement to the small claims complaint?
subquestion: |
  If you have a written agreement, you should attach it to your Small Claims Complaint.

  If you cannot attach the written agreement, you can explain why on the next screen.
fields:
  - no label: attach_check
    datatype: yesnoradio
---
id: no attachment explanation
question: |
   Why can you not attach a copy of your written agreement to your small claims complaint?
fields:
  - Explanation: attach_explain
    input type: area
    rows: 2
    maxlength: 175
---
id: demand payment check
question: |
  % if other_parties.number_gathered() > 1:
  Have you demanded payment of $${amount_check} and have the defendants failed to pay you the full amount?
  % else:
  Have you demanded payment of $${amount_check} and has ${other_parties[0].name.full(middle='full')} failed to pay you the full amount?
  % endif
fields:
  - no label: demand_check
    datatype: yesnoradio
---
id: claim reason
question: |
  % if other_parties.number_gathered() > 1:
  Why do the defendants owe you $${amount_check}?
  % else:
  Why does ${other_parties[0].name.full(middle='full')} owe you $${amount_check}?
  % endif
subquestion: |
  % if other_parties.number_gathered() > 1:
  Explain why the defendants owe you money. Be specific. Include dates, what happened, and if any payments were made. If there was a contract, an agreement, or a receipt, mention it here. Remember you can only sue for money in Small Claims Court.
  % else:
  Explain why the ${other_parties[0].name.full(middle='full')} owes you money. Be specific. Include dates, what happened, and if any payments were made. If there was a contract, an agreement, or a receipt, mention it here. Remember you can only sue for money in Small Claims Court.
  % endif

  Here are some examples:

  "On April 21, 2023, I agreed to sell my couch to my neighbor Fred Washington for $100. We agreed that Fred would pay me $100 within a week after receiving the couch. We wrote down the agreement. A copy of the agreement is attached. I gave Fred the couch on May 22, 2020. He paid me $25 on June 1, 2020. I asked him to pay the remaining $75 every week since then. He has not paid me the $75."

  "On June 3, 2023, Julia Smith's dog bit me. I went to the emergency room to get treatment. The bill was for $568.90. I gave Julia a copy of the bill on August 3, 2023. A copy of the bill is attached. I have asked Julia to pay me back for the hospital bill. She has not paid me."
fields:
  - Explanation: claim_reason
    input type: area
    rows: 16
    maxlength: 2400
---
depends on:
  - other_parties[i].person_type
code: |
  if other_parties[i].person_type == "person":
    other_parties[i].agent_check = False
  other_parties[i].person_catch = True
---
#This question should only be asked if a given defendant is a business.
id: defendant agent check
question: |
  Does ${other_parties[i].name.full(middle='full')} have a registered agent?
subquestion: |
  You may be able to find this information from the [**Illinois Secretary of State**](www.ilsos.gov/corporatellc/).
fields:
  - no label: other_parties[i].agent_check
    datatype: yesnoradio
---
id: defendant agent name
question: |
  What is the name of ${other_parties[i].name.full(middle='full')}'s registered agent?
subquestion: |
  You may be able to find this information from the [**Illinois Secretary of State**](www.ilsos.gov/corporatellc/).
fields:
  - First: other_parties[i].agent.name.first
  - Middle: other_parties[i].agent.name.middle
    required: False
  - Last: other_parties[i].agent.name.last
  - Suffix: other_parties[i].agent.name.suffix
    required: False
---
id: defendant same address
question: |
  % if other_parties[i].agent_check == True:
  Do you want to serve ${other_parties[i].agent.name.full(middle='full')} at ${other_parties[i].name.full(middle='full')}'s address?
  % else:
  Do you want to serve ${other_parties[i].name.full(middle='full')} at their address?
  % endif
subquestion: |
  ${other_parties[i].name.full(middle='full')}'s address is:
  
  ${other_parties[i].address.line_one(bare=True)}
  ${other_parties[i].address.line_two()}
field: other_parties[i].same_address
choices:
  - Yes: True
  - No, I want to enter a different address for service: False
---
id: defendant service address
question: |
  % if other_parties[i].agent_check == True:
  Where will you serve ${other_parties[i].agent.name.full(middle='full')}?
  % else:
  Where will you serve ${other_parties[i].name.full(middle='full')}?
  % endif
fields:
  - Street address: other_parties[i].service_address.address
    address autocomplete: True
  - Address line 2: other_parties[i].service_address.unit
    required: False
  - City: other_parties[i].service_address.city
  - State: other_parties[i].service_address.state
    code: |
      states_list()
  - ZIP code: other_parties[i].service_address.zip
---
id: defendant alt service
question: |
  % if other_parties[i].agent_check == True:
  Do you want to list an alternate address, phone number, or email for ${other_parties[i].agent.name.full(middle='full')}?
  % else:
  Do you want to list an alternate address, phone number, or email for ${other_parties[i].name.full(middle='full')}?
  % endif
fields:
  - no label: other_parties[i].alt_delivery
    datatype: yesnoradio
---
id: defendant service address
question: |
  % if other_parties[i].agent_check == True:
  What is the alternate address for ${other_parties[i].agent.name.full(middle='full')}?
  % else:
  What is the alternate address for ${other_parties[i].name.full(middle='full')}?
  % endif
fields:
  - Street address: other_parties[i].alt_service_address.address
    address autocomplete: True
    required: False
  - Address line 2: other_parties[i].alt_service_address.unit
    required: False
  - City: other_parties[i].alt_service_address.city
    required: False
  - State: other_parties[i].alt_service_address.state
    code: |
      states_list()
    required: False
  - ZIP code: other_parties[i].alt_service_address.zip
    required: False
---
id: defendant service contact
question: |
  % if other_parties[i].agent_check == True:
  What is ${other_parties[i].agent.name.full(middle='full')}'s contact information?
  % else:
  What is ${other_parties[i].name.full(middle='full')}'s contact information?
  % endif
fields:
  - Phone number: other_parties[i].service_phone
    datatype: al_international_phone
    required: False
  - Email: other_parties[i].service_email
    datatype: email
    required: False
validation code: |
  if (not showifdef('other_parties[i].service_phone') and \
      (not showifdef('other_parties[i].service_email'))):
    validation_error(word("You need to provide at least one contact method."), field="other_parties[i].service_email")
---
id: defendant alt contact
question: |
  % if other_parties[i].agent_check == True:
  What is ${other_parties[i].agent.name.full(middle='full')}'s alternate contact information?
  % else:
  What is ${other_parties[i].name.full(middle='full')}'s alternate contact information?
  % endif
fields:
  - Phone number: other_parties[i].alt_service_phone
    datatype: al_international_phone
    required: False
  - Email: other_parties[i].alt_service_email
    datatype: email
    required: False
---
id: defendant service method
question: |
  % if other_parties[i].agent_check == True:
  How will you serve ${other_parties[i].agent.name.full(middle='full')}?
  % else:
  How will you serve ${other_parties[i].name.full(middle='full')}?
  % endif
subquestion: |
  In Small Claims Court, you can serve a defendant by:

  * Circuit Clerk,
  * Sheriff inside Illinois,
  * Sheriff outside Illinois,
  * Special process server, or
  * Licensed private detective
field: other_parties[i].service_method
choices:
  - Certified or registered mail: mail
  - Sheriff: sheriff
  - Special process server: server
  - I do not know yet: unknown
---
id: signature
question: |
  Do you want to add your electronic signature to your forms?
subquestion: |
  The program will put “/s/ ${users[0].name.full(middle='full')}” where you would sign your name so you do not have to sign the forms. The court will accept this as your signature.

fields:
  - "Add electronic signature?": e_signature
    datatype: yesnoradio
---
id: next steps
continue button field: next_steps
question: |
  Next steps
subquestion: |
  You will need to ask the Circuit Clerk how the defendants must respond to your Small Claims Complaint. The clerk will give you:

  * A time and date for a hearing,
  * Information on whether the hearing is in person or remote, and/or
  * A date by which the defendents need to file an Appearance.

  After you find out, you must put this information in the Summons section 3 (on page 2).
---
id: evidence
continue button field: evidence
question: |
  Evidence
subquestion: |
  ou can attach evidence of your claim to your complaint. Evidence can be things like paperwork or photos that show why a defendant owes you money.

  If you are e-filing, you can upload other documents as part of the e-filing process. If you are paper filing, bring copies of the documents to the clerk's office so you can attach them to the complaint.
---
id: get docs screen
event: get_docs_screen
question: |
  Download
subquestion: |
  Your form is ready. View and download your form below. Click **Make changes** to fix any mistakes.
  
  Read the instructions to learn what to do next.
  
  ${ action_button_html(url_action('review_answers'), label=':edit: Make changes', color='success', size="md") }

  ${ al_user_bundle.download_list_html() }
 
  &nbsp;

  ${ al_user_bundle.send_button_html(show_editable_checkbox=False) }
  
  **Note:** This program does not send your form. You will need to do this yourself.

  Thank you for using ILAO Easy Forms!
under: |
  % if not user_logged_in():
  [${fa_icon("sign-in-alt", color="#0079d0", size="sm")} **Sign-in**](${url_of('login', next=interview_url())}) or [**create**](${url_of('register', next=interview_url())}) an ILAO Easy Form account to save your progress (optional).
  % endif

 
  ${ action_button_html(interview_url(i="docassemble.ILAO:feedback.yml", easy_form_interview=ilao_easy_form_url, easy_form_title=ilao_easy_form_title, easy_form_page=user_info().question_id, easy_form_variable=user_info().variable, local=False,reset=1), label=':comment: Was this program helpful?', color="#181c36", size="md", new_window=True) }
---
generic object: ALDocumentBundle
template: x.send_email_template
subject: |
  Small claims complaint
content: |
  Your forms are attached.
  
  Thanks for using ILAO Easy Forms!
  
  [**Illinois Legal Aid Online**](https://www.illinoislegalaid.org)
---
objects:
  - instructions: ALDocument.using(title="Instructions", filename="instructions.pdf", has_addendum=False)
  - getting_started: ALDocument.using(title="Getting Started", filename="getting_started.pdf",  has_addendum=False)
  - complaint: ALDocument.using(title="Complaint", filename="complaint.pdf", has_addendum=False)
  - additional_defendants: ALDocument.using(title="Additional Defendants", filename="additional_defendants.pdf", has_addendum=False)
  - additional_reasons: ALDocument.using(title="Additional Reasons", filename="additional_reasons.pdf", has_addendum=False)
  - letter_to_sheriff: ALDocument.using(title="Letter to sheriff", filename="letter_to_sheriff.pdf", has_addendum=False)
  - order: ALDocument.using(title="Order", filename="order.pdf", has_addendum=False)
  - summons_one: ALDocument.using(title="Summons", filename="summons.pdf", has_addendum=False)
  - summons_two: ALDocument.using(title="Summons 2", filename="summons_2.pdf", has_addendum=False)
  - summons_three: ALDocument.using(title="Summons 3", filename="summons_3.pdf", has_addendum=False)
  - summons_four: ALDocument.using(title="Summons 4", filename="summons_4.pdf", has_addendum=False)
  - summons_five: ALDocument.using(title="Summons 5", filename="summons_5.pdf", has_addendum=False)
  - summons_six: ALDocument.using(title="Summons 6", filename="summons_6.pdf", has_addendum=False)
  - summons_seven: ALDocument.using(title="Summons 7", filename="summons_7.pdf", has_addendum=False)
  - summons_eight: ALDocument.using(title="Summons 8", filename="summons_8.pdf", has_addendum=False)
  - summons_nine: ALDocument.using(title="Summons 9", filename="summons_9.pdf", has_addendum=False)
  - summons_blank: ALDocument.using(title="Blank Summons", filename="summons_blank.pdf", has_addendum=False)
---
objects:
  - al_user_bundle: ALDocumentBundle.using(elements=[instructions, getting_started, complaint, additional_defendants, additional_reasons, letter_to_sheriff, order, summons_one, summons_two, summons_three, summons_four, summons_five, summons_six, summons_seven, summons_eight, summons_nine, summons_blank], filename="small_claims_complaint.pdf", title="All forms")
  - al_court_bundle: ALDocumentBundle.using(elements=[instructions, getting_started, complaint, additional_defendants, additional_reasons, letter_to_sheriff, order, summons_one, summons_two, summons_three, summons_four, summons_five, summons_six, summons_seven, summons_eight, summons_nine, summons_blank], filename="small_claims_complaint.pdf", title="All forms")
---
code: |
  instructions.enabled = True
  getting_started.enabled = True
  complaint.enabled = True
  additional_defendants.enabled = False
  additional_reasons.enabled = False
  letter_to_sheriff.enabled = False
  order.enabled = True
  summons_one.enabled = True
  summons_two.enabled = False
  summons_three.enabled = False
  summons_four.enabled = False
  summons_five.enabled = False
  summons_six.enabled = False
  summons_seven.enabled = False
  summons_eight.enabled = False
  summons_nine.enabled = False
  summons_blank.enabled = False
  
  if other_parties.number_gathered() > 2:
    additional_defendants.enabled = True
    
  if len(claim_reason) > 1400:
    additional_reasons.enabled = True
  
  if other_parties.number() > 1:
      summons_two.enabled = True
      if other_parties.number() > 2:
        summons_three.enabled = True
        if other_parties.number() > 3:
          summons_four.enabled = True
          if other_parties.number() > 4:
            summons_five.enabled = True
            if other_parties.number() > 5:
              summons_six.enabled = True
              if other_parties.number() > 6:
                summons_seven.enabled = True
                if other_parties.number() > 7:
                  summons_eight.enabled = True
                  if other_parties.number() > 8:
                    summons_nine.enabled = True
                    if blank_summons_check == True:
                      summons_blank.enabled = True
---
attachment:
  variable name: instructions[i]
  name: instructions
  filename: instructions
  skip undefined: True
  editable: False
  pdf template file: SMC_Instructions.pdf
  fields:
      - "fake": ${ "" }   
---
attachment:
  variable name: getting_started[i]
  name: getting_started
  filename: getting_started
  skip undefined: True
  editable: False
  pdf template file: SMC_Getting_Started.pdf
  fields:
      - "fake": ${ "" }   
---
attachment:
  variable name: complaint[i]
  name: complaint
  filename: complaint
  skip undefined: True
  editable: False
  pdf template file: SMC_Complaint.pdf
  fields:
    - "case_number": ${""}
    - "filing_county": ${filing_location.county}
    - "plaintiff_name": ${users[0].name.full(middle='full')}
    - "defendant_list": ${other_parties.short_list(4)}
    - "defendant_one_name": ${other_parties[0].name.full(middle='full')}
    - "defendant_one_address": ${other_parties[0].address.on_one_line(bare=True)}
    - "defendant_two_name": ${other_parties[1].name.full(middle='full')}
    - "defendant_two_address": ${other_parties[1].address.on_one_line(bare=True)}
    - "extra_defendants": ${True if other_parties.number_gathered() > 2 else False}
    - "amount_owed": ${amount_check}
    - "no_agreement": ${ True if agreement_check == False else False}
    - "attached_agreement": ${ True if agreement_check == True and attach_check == True else False}
    - "unattached_agreement": ${True if agreement_check == True and attach_check == False else False}
    - "unattached_reason": ${ attach_explain if agreement_check == True and attach_check == False else ""}
    - "demanded_and_failed": ${ True if demand_check == True else False}
    - "why_owed": ${claim_reason[:1400]}
    - "additional_reasons": ${ True if len(claim_reason) > 1400 else False}
    - "e_signature": ${users[0].name.full(middle='full') if e_signature == True else ""}
    - "plaintiff_street": ${users[0].address.line_one(bare=True)}
    - "plaintiff_city_state_zip": ${users[0].address.line_two()}
    - "plaintiff_phone": ${phone_number_formatted(users[0].phone_number) if users[0].phone_number != "" else ""}
    - "plaintiff_email": ${users[0].email}
    - "amount_check": ${currency(amount_check)}
---
attachment:
  variable name: additional_reasons[i]
  name: additional_reasons
  filename: additional_reasons
  skip undefined: True
  editable: False
  pdf template file: SMC_Additional_Reasons.pdf
  fields:
    - "case_number": ${""}
    - "filing_county": ${filing_location.county}
    - "plaintiff_name": ${users[0].name.full(middle='full')}
    - "defendant_list": ${other_parties.short_list(4)}
    - "further_reasons": ${claim_reason[1400:]}
---
attachment:
  variable name: additional_defendants[i]
  name: additional_defendants
  filename: additional_defendants
  skip undefined: True
  editable: False
  pdf template file: SMC_Additional_Defendants.pdf
  fields:
    - "case_number": ${""}
    - "filing_county": ${filing_location.county}
    - "plaintiff_name": ${users[0].name.full(middle='full')}
    - "defendant_list": ${other_parties.short_list(4)}
    - "defendant_three_name": ${other_parties[2].name.full(middle='full')}
    - "defendant_three_address": ${other_parties[2].address.on_one_line(bare=True)}
    - "defendant_four_name": ${other_parties[3].name.full(middle='full')}
    - "defendant_four_address": ${other_parties[3].address.on_one_line(bare=True)}
    - "defendant_five_name": ${other_parties[4].name.full(middle='full')}
    - "defendant_five_address": ${other_parties[4].address.on_one_line(bare=True)}
    - "defendant_six_name": ${other_parties[5].name.full(middle='full')}
    - "defendant_six_address": ${other_parties[5].address.on_one_line(bare=True)}
    - "defendant_seven_name": ${other_parties[6].name.full(middle='full')}
    - "defendant_seven_address": ${other_parties[6].address.on_one_line(bare=True)}
    - "defendant_eight_name": ${other_parties[7].name.full(middle='full')}
    - "defendant_eight_address": ${other_parties[7].address.on_one_line(bare=True)}
    - "defendant_nine_name": ${other_parties[8].name.full(middle='full')}
    - "defendant_nine_address": ${other_parties[8].address.on_one_line(bare=True)}
---
#I'm not certain if this form is necessary. It wasn't included in the A2JAUthor/HotDocs version of this program, but it is listed on the Illinois Courts website's small claims form. For now I'm making the attachment but not setting up the fields.
attachment:
  variable name: letter_to_sheriff[i]
  name: letter_to_sheriff
  filename: letter_to_sheriff
  skip undefined: True
  editable: False
  pdf template file: SMC_Letter_to_Sheriff.pdf
  fields:
    - "plaintiff_name": ${users[0].name.full(middle='full')}
    - "plaintiff_address_one": ${users[0].address.line_one(bare=True)}
    - "plaintiff_address_two": ${users[0].address.line_two()}
    - "plaintiff_phone": ${phone_number_formatted(users[0].phone_number) if users[0].phone_number != "" else ""}
    - "plaintiff_email": ${users[0].email}
    - "filing_county": ${filing_location.county}
    - "defendant_list": ${other_parties.comma_and_list()}
    - "short_defendant_list": ${other_parties.short_list(1)}
---
attachment:
  variable name: order[i]
  name: order
  filename: order
  skip undefined: True
  editable: False
  pdf template file: SMC_Order.pdf
  fields:
    - "case_number": ${""}
    - "filing_county": ${filing_location.county}
    - "plaintiff_name": ${users[0].name.full(middle='full')}
    - "defendant_list": ${other_parties.short_list(4)}
---
attachment:
  variable name: summons_one[i]
  name: summons_one
  filename: summons_one
  skip undefined: True
  editable: False
  pdf template file: SMC_Summons.pdf
  fields:
    - "case_number": ${""}
    - "filing_county": ${filing_location.county}
    - "plaintiff_name": ${users[0].name.full(middle='full')}
    - "defendant_list": ${other_parties.short_list(4)}
    - "defendant_name": ${other_parties[0].name.full(middle='full')}
    - "agent_name": ${other_parties[0].agent.name.full(middle='full')}
    - "main_service_street": ${other_parties[0].address.line_one(bare=True)  if other_parties[0].same_address == True else other_parties[0].service_address.line_one(bare=True)}
    - "main_service_csz": ${other_parties[0].address.line_two()  if other_parties[0].same_address == True else other_parties[0].service_address.line_two()}
    - "main_service_phone": ${ phone_number_formatted(other_parties[0].service_phone) if other_parties[0].service_phone != "" else ""}
    - "main_service_email": ${other_parties[0].service_email}
    - "alt_service_street": ${other_parties[0].alt_service_address.line_one(bare=True)  if other_parties[0].alt_delivery == True else ""}
    - "alt_service_csz": ${other_parties[0].alt_service_address.line_two()  if other_parties[0].alt_delivery == True else ""}
    - "alt_service_phone": ${ phone_number_formatted(other_parties[0].alt_service_phone) if other_parties[0].alt_service_phone != "" and other_parties[0].alt_delivery == True else ""}
    - "alt_service_email": ${other_parties[0].alt_service_email if other_parties[0].alt_delivery == True else ""}
    - "by_mail": ${ True if other_parties[0].service_method == "mail" else False}
    - "by_sheriff": ${ True if other_parties[0].service_method == "sheriff" else False}
    - "by_server": ${ True if other_parties[0].service_method == "server" else False}
    - "plaintiff_street": ${users[0].address.line_one(bare=True)}
    - "plaintiff_csz": ${users[0].address.line_two()}
    - "plaintiff_phone": ${phone_number_formatted(users[0].phone_number) if users[0].phone_number != "" else ""}
    - "plaintiff_email": ${users[0].email}
---
attachment:
  variable name: summons_two[i]
  name: summons_two
  filename: summons_two
  skip undefined: True
  editable: False
  pdf template file: SMC_Summons.pdf
  fields:
    - "case_number": ${""}
    - "filing_county": ${filing_location.county}
    - "plaintiff_name": ${users[0].name.full(middle='full')}
    - "defendant_list": ${other_parties.short_list(4)}
    - "defendant_name": ${other_parties[1].name.full(middle='full')}
    - "agent_name": ${other_parties[1].agent.name.full(middle='full')}
    - "main_service_street": ${other_parties[1].address.line_one(bare=True)  if other_parties[1].same_address == True else other_parties[1].service_address.line_one(bare=True)}
    - "main_service_csz": ${other_parties[1].address.line_two()  if other_parties[1].same_address == True else other_parties[1].service_address.line_two()}
    - "main_service_phone": ${ phone_number_formatted(other_parties[1].service_phone) if other_parties[1].service_phone != "" else ""}
    - "main_service_email": ${other_parties[1].service_email}
    - "alt_service_street": ${other_parties[1].alt_service_address.line_one(bare=True)  if other_parties[1].alt_delivery == True else ""}
    - "alt_service_csz": ${other_parties[1].alt_service_address.line_two()  if other_parties[1].alt_delivery == True else ""}
    - "alt_service_phone": ${ phone_number_formatted(other_parties[1].alt_service_phone) if other_parties[1].alt_service_phone != "" and other_parties[1].alt_delivery == True else ""}
    - "alt_service_email": ${other_parties[1].alt_service_email if other_parties[1].alt_delivery == True else ""}
    - "by_mail": ${ True if other_parties[1].service_method == "mail" else False}
    - "by_sheriff": ${ True if other_parties[1].service_method == "sheriff" else False}
    - "by_server": ${ True if other_parties[1].service_method == "server" else False}
    - "plaintiff_street": ${users[0].address.line_one(bare=True)}
    - "plaintiff_csz": ${users[0].address.line_two()}
    - "plaintiff_phone": ${phone_number_formatted(users[0].phone_number) if users[0].phone_number != "" else ""}
    - "plaintiff_email": ${users[0].email}
---
attachment:
  variable name: summons_three[i]
  name: summons_three
  filename: summons_three
  skip undefined: True
  editable: False
  pdf template file: SMC_Summons.pdf
  fields:
    - "case_number": ${""}
    - "filing_county": ${filing_location.county}
    - "plaintiff_name": ${users[0].name.full(middle='full')}
    - "defendant_list": ${other_parties.short_list(4)}
    - "defendant_name": ${other_parties[2].name.full(middle='full')}
    - "agent_name": ${other_parties[2].agent.name.full(middle='full')}
    - "main_service_street": ${other_parties[2].address.line_one(bare=True)  if other_parties[2].same_address == True else other_parties[2].service_address.line_one(bare=True)}
    - "main_service_csz": ${other_parties[2].address.line_two() if other_parties[2].same_address == True else other_parties[2].service_address.line_two()}
    - "main_service_phone": ${ phone_number_formatted(other_parties[2].service_phone) if other_parties[2].service_phone != "" else ""}
    - "main_service_email": ${other_parties[2].service_email}
    - "alt_service_street": ${other_parties[2].alt_service_address.line_one(bare=True)  if other_parties[2].alt_delivery == True else ""}
    - "alt_service_csz": ${other_parties[2].alt_service_address.line_two()  if other_parties[2].alt_delivery == True else ""}
    - "alt_service_phone": ${ phone_number_formatted(other_parties[2].alt_service_phone) if other_parties[2].alt_service_phone != "" and other_parties[2].alt_delivery == True else ""}
    - "alt_service_email": ${other_parties[2].alt_service_email if other_parties[2].alt_delivery == True else ""}
    - "by_mail": ${ True if other_parties[2].service_method == "mail" else False}
    - "by_sheriff": ${ True if other_parties[2].service_method == "sheriff" else False}
    - "by_server": ${ True if other_parties[2].service_method == "server" else False}
    - "plaintiff_street": ${users[0].address.line_one(bare=True)}
    - "plaintiff_csz": ${users[0].address.line_two()}
    - "plaintiff_phone": ${phone_number_formatted(users[0].phone_number) if users[0].phone_number != "" else ""}
    - "plaintiff_email": ${users[0].email}
---
attachment:
  variable name: summons_four[i]
  name: summons_four
  filename: summons_four
  skip undefined: True
  editable: False
  pdf template file: SMC_Summons.pdf
  fields:
    - "case_number": ${""}
    - "filing_county": ${filing_location.county}
    - "plaintiff_name": ${users[0].name.full(middle='full')}
    - "defendant_list": ${other_parties.short_list(4)}
    - "defendant_name": ${other_parties[3].name.full(middle='full')}
    - "agent_name": ${other_parties[3].agent.name.full(middle='full')}
    - "main_service_street": ${other_parties[3].address.line_one(bare=True)  if other_parties[3].same_address == True else other_parties[3].service_address.line_one(bare=True)}
    - "main_service_csz": ${other_parties[3].address.line_two()  if other_parties[3].same_address == True else other_parties[3].service_address.line_two()}
    - "main_service_phone": ${ phone_number_formatted(other_parties[3].service_phone) if other_parties[3].service_phone != "" else ""}
    - "main_service_email": ${other_parties[3].service_email}
    - "alt_service_street": ${other_parties[3].alt_service_address.line_one(bare=True)  if other_parties[3].alt_delivery == True else ""}
    - "alt_service_csz": ${other_parties[3].alt_service_address.line_two()  if other_parties[3].alt_delivery == True else ""}
    - "alt_service_phone": ${ phone_number_formatted(other_parties[3].alt_service_phone) if other_parties[3].alt_service_phone != "" and other_parties[3].alt_delivery == True else ""}
    - "alt_service_email": ${other_parties[3].alt_service_email if other_parties[3].alt_delivery == True else ""}
    - "by_mail": ${ True if other_parties[3].service_method == "mail" else False}
    - "by_sheriff": ${ True if other_parties[3].service_method == "sheriff" else False}
    - "by_server": ${ True if other_parties[3].service_method == "server" else False}
    - "plaintiff_street": ${users[0].address.line_one(bare=True)}
    - "plaintiff_csz": ${users[0].address.line_two()}
    - "plaintiff_phone": ${phone_number_formatted(users[0].phone_number) if users[0].phone_number != "" else ""}
    - "plaintiff_email": ${users[0].email}
---
attachment:
  variable name: summons_five[i]
  name: summons_five
  filename: summons_five
  skip undefined: True
  editable: False
  pdf template file: SMC_Summons.pdf
  fields:
    - "case_number": ${""}
    - "filing_county": ${filing_location.county}
    - "plaintiff_name": ${users[0].name.full(middle='full')}
    - "defendant_list": ${other_parties.short_list(4)}
    - "defendant_name": ${other_parties[4].name.full(middle='full')}
    - "agent_name": ${other_parties[4].agent.name.full(middle='full')}
    - "main_service_street": ${other_parties[4].address.line_one(bare=True)  if other_parties[4].same_address == True else other_parties[4].service_address.line_one(bare=True)}
    - "main_service_csz": ${other_parties[4].address.line_two()  if other_parties[4].same_address == True else other_parties[4].service_address.line_two()}
    - "main_service_phone": ${ phone_number_formatted(other_parties[4].service_phone) if other_parties[4].service_phone != "" else ""}
    - "main_service_email": ${other_parties[4].service_email}
    - "alt_service_street": ${other_parties[4].alt_service_address.line_one(bare=True)  if other_parties[4].alt_delivery == True else ""}
    - "alt_service_csz": ${other_parties[4].alt_service_address.line_two()  if other_parties[4].alt_delivery == True else ""}
    - "alt_service_phone": ${ phone_number_formatted(other_parties[4].alt_service_phone) if other_parties[4].alt_service_phone != "" and other_parties[4].alt_delivery == True else ""}
    - "alt_service_email": ${other_parties[4].alt_service_email if other_parties[4].alt_delivery == True else ""}
    - "by_mail": ${ True if other_parties[4].service_method == "mail" else False}
    - "by_sheriff": ${ True if other_parties[4].service_method == "sheriff" else False}
    - "by_server": ${ True if other_parties[4].service_method == "server" else False}
    - "plaintiff_street": ${users[0].address.line_one(bare=True)}
    - "plaintiff_csz": ${users[0].address.line_two()}
    - "plaintiff_phone": ${phone_number_formatted(users[0].phone_number) if users[0].phone_number != "" else ""}
    - "plaintiff_email": ${users[0].email}
---
attachment:
  variable name: summons_six[i]
  name: summons_six
  filename: summons_six
  skip undefined: True
  editable: False
  pdf template file: SMC_Summons.pdf
  fields:
    - "case_number": ${""}
    - "filing_county": ${filing_location.county}
    - "plaintiff_name": ${users[0].name.full(middle='full')}
    - "defendant_list": ${other_parties.short_list(4)}
    - "defendant_name": ${other_parties[5].name.full(middle='full')}
    - "agent_name": ${other_parties[5].agent.name.full(middle='full')}
    - "main_service_street": ${other_parties[5].address.line_one(bare=True)  if other_parties[5].same_address == True else other_parties[5].service_address.line_one(bare=True)}
    - "main_service_csz": ${other_parties[5].address.line_two()  if other_parties[5].same_address == True else other_parties[5].service_address.line_two()}
    - "main_service_phone": ${ phone_number_formatted(other_parties[5].service_phone) if other_parties[5].service_phone != "" else ""}
    - "main_service_email": ${other_parties[5].service_email}
    - "alt_service_street": ${other_parties[5].alt_service_address.line_one(bare=True)  if other_parties[5].alt_delivery == True else ""}
    - "alt_service_csz": ${other_parties[5].alt_service_address.line_two()  if other_parties[5].alt_delivery == True else ""}
    - "alt_service_phone": ${ phone_number_formatted(other_parties[5].alt_service_phone) if other_parties[5].alt_service_phone != "" and other_parties[5].alt_delivery == True else ""}
    - "alt_service_email": ${other_parties[5].alt_service_email if other_parties[5].alt_delivery == True else ""}
    - "by_mail": ${ True if other_parties[5].service_method == "mail" else False}
    - "by_sheriff": ${ True if other_parties[5].service_method == "sheriff" else False}
    - "by_server": ${ True if other_parties[5].service_method == "server" else False}
    - "plaintiff_street": ${users[0].address.line_one(bare=True)}
    - "plaintiff_csz": ${users[0].address.line_two()}
    - "plaintiff_phone": ${phone_number_formatted(users[0].phone_number) if users[0].phone_number != "" else ""}
    - "plaintiff_email": ${users[0].email}
---
attachment:
  variable name: summons_seven[i]
  name: summons_seven
  filename: summons_seven
  skip undefined: True
  editable: False
  pdf template file: SMC_Summons.pdf
  fields:
    - "case_number": ${""}
    - "filing_county": ${filing_location.county}
    - "plaintiff_name": ${users[0].name.full(middle='full')}
    - "defendant_list": $${other_parties.short_list(4)}
    - "defendant_name": ${other_parties[6].name.full(middle='full')}
    - "agent_name": ${other_parties[6].agent.name.full(middle='full')}
    - "main_service_street": ${other_parties[6].address.line_one(bare=True)  if other_parties[6].same_address == True else other_parties[6].service_address.line_one(bare=True)}
    - "main_service_csz": ${other_parties[6].address.line_two()  if other_parties[6].same_address == True else other_parties[6].service_address.line_two()}
    - "main_service_phone": ${ phone_number_formatted(other_parties[6].service_phone) if other_parties[6].service_phone != "" else ""}
    - "main_service_email": ${other_parties[6].service_email}
    - "alt_service_street": ${other_parties[6].alt_service_address.line_one(bare=True)  if other_parties[6].alt_delivery == True else ""}
    - "alt_service_csz": ${other_parties[6].alt_service_address.line_two()  if other_parties[6].alt_delivery == True else ""}
    - "alt_service_phone": ${ phone_number_formatted(other_parties[6].alt_service_phone) if other_parties[6].alt_service_phone != "" and other_parties[6].alt_delivery == True else ""}
    - "alt_service_email": ${other_parties[6].alt_service_email if other_parties[6].alt_delivery == True else ""}
    - "by_mail": ${ True if other_parties[6].service_method == "mail" else False}
    - "by_sheriff": ${ True if other_parties[6].service_method == "sheriff" else False}
    - "by_server": ${ True if other_parties[6].service_method == "server" else False}
    - "plaintiff_street": ${users[0].address.line_one(bare=True)}
    - "plaintiff_csz": ${users[0].address.line_two()}
    - "plaintiff_phone": ${phone_number_formatted(users[0].phone_number) if users[0].phone_number != "" else ""}
    - "plaintiff_email": ${users[0].email}
---
attachment:
  variable name: summons_eight[i]
  name: summons_eight
  filename: summons_eight
  skip undefined: True
  editable: False
  pdf template file: SMC_Summons.pdf
  fields:
    - "case_number": ${""}
    - "filing_county": ${filing_location.county}
    - "plaintiff_name": ${users[0].name.full(middle='full')}
    - "defendant_list": ${other_parties.short_list(4)}
    - "defendant_name": ${other_parties[7].name.full(middle='full')}
    - "agent_name": ${other_parties[7].agent.name.full(middle='full')}
    - "main_service_street": ${other_parties[7].address.line_one(bare=True)  if other_parties[7].same_address == True else other_parties[7].service_address.line_one(bare=True)}
    - "main_service_csz": ${other_parties[7].address.line_two()  if other_parties[7].same_address == True else other_parties[7].service_address.line_two()}
    - "main_service_phone": ${ phone_number_formatted(other_parties[7].service_phone) if other_parties[7].service_phone != "" else ""}
    - "main_service_email": ${other_parties[7].service_email}
    - "alt_service_street": ${other_parties[7].alt_service_address.line_one(bare=True)  if other_parties[7].alt_delivery == True else ""}
    - "alt_service_csz": ${other_parties[7].alt_service_address.line_two()  if other_parties[7].alt_delivery == True else ""}
    - "alt_service_phone": ${ phone_number_formatted(other_parties[7].alt_service_phone) if other_parties[7].alt_service_phone != "" and other_parties[7].alt_delivery == True else ""}
    - "alt_service_email": ${other_parties[7].alt_service_email if other_parties[7].alt_delivery == True else ""}
    - "by_mail": ${ True if other_parties[7].service_method == "mail" else False}
    - "by_sheriff": ${ True if other_parties[7].service_method == "sheriff" else False}
    - "by_server": ${ True if other_parties[7].service_method == "server" else False}
    - "plaintiff_street": ${users[0].address.line_one(bare=True)}
    - "plaintiff_csz": ${users[0].address.line_two()}
    - "plaintiff_phone": ${phone_number_formatted(users[0].phone_number) if users[0].phone_number != "" else ""}
    - "plaintiff_email": ${users[0].email}
---
attachment:
  variable name: summons_nine[i]
  name: summons_nine
  filename: summons_nine
  skip undefined: True
  editable: False
  pdf template file: SMC_Summons.pdf
  fields:
    - "case_number": ${""}
    - "filing_county": ${filing_location.county}
    - "plaintiff_name": ${users[0].name.full(middle='full')}
    - "defendant_list": ${other_parties.short_list(4)}
    - "defendant_name": ${other_parties[8].name.full(middle='full')}
    - "agent_name": ${other_parties[8].agent.name.full(middle='full')}
    - "main_service_street": ${other_parties[8].address.line_one(bare=True)  if other_parties[8].same_address == True else other_parties[8].service_address.line_one(bare=True)}
    - "main_service_csz": ${other_parties[8].address.line_two()  if other_parties[8].same_address == True else other_parties[8].service_address.line_two()}
    - "main_service_phone": ${ phone_number_formatted(other_parties[8].service_phone) if other_parties[8].service_phone != "" else ""}
    - "main_service_email": ${other_parties[8].service_email}
    - "alt_service_street": ${other_parties[8].alt_service_address.line_one(bare=True)  if other_parties[8].alt_delivery == True else ""}
    - "alt_service_csz": ${other_parties[8].alt_service_address.line_two()  if other_parties[8].alt_delivery == True else ""}
    - "alt_service_phone": ${ phone_number_formatted(other_parties[8].alt_service_phone) if other_parties[8].alt_service_phone != "" and other_parties[8].alt_delivery == True else ""}
    - "alt_service_email": ${other_parties[8].alt_service_email if other_parties[8].alt_delivery == True else ""}
    - "by_mail": ${ True if other_parties[8].service_method == "mail" else False}
    - "by_sheriff": ${ True if other_parties[8].service_method == "sheriff" else False}
    - "by_server": ${ True if other_parties[8].service_method == "server" else False}
    - "plaintiff_street": ${users[0].address.line_one(bare=True)}
    - "plaintiff_csz": ${users[0].address.line_two()}
    - "plaintiff_phone": ${phone_number_formatted(users[0].phone_number) if users[0].phone_number != "" else ""}
    - "plaintiff_email": ${users[0].email}
---
attachment:
  variable name: summons_blank[i]
  name: summons_blank
  filename: summons_blank
  skip undefined: True
  editable: False
  pdf template file: SMC_Summons.pdf
  fields:
    - "case_number": ${""}
    - "filing_county": ${filing_location.county}
    - "plaintiff_name": ${users[0].name.full(middle='full')}
    - "defendant_list": ${other_parties.short_list(4)}
    - "defendant_name": ${""}
    - "agent_name": ${""}
    - "main_service_street": ${""}
    - "main_service_csz": ${""}
    - "main_service_phone": ${""}
    - "main_service_email": ${""}
    - "alt_service_street": ${""}
    - "alt_service_csz": ${""}
    - "alt_service_phone": ${""}
    - "alt_service_email": ${""}
    - "by_mail": ${False}
    - "by_sheriff": ${False}
    - "by_server": ${False}
    - "plaintiff_street": ${users[0].address.line_one(bare=True)}
    - "plaintiff_csz": ${users[0].address.line_two()}
    - "plaintiff_phone": ${phone_number_formatted(users[0].phone_number) if users[0].phone_number != "" else ""}
    - "plaintiff_email": ${users[0].email}
---
id: review screen
event: review_answers
question: |
  Review screen
subquestion: |
  Edit your answers below.
review: 
  - Edit: amount_check
    button: |
      **You are suing for:**
      $${amount_check}  
  - Edit: filing_location.county_number
    button: |
      **You are filing in:**
      ${end_in_county(filing_location.county)}
  - Edit: other_parties.revisit
    button: |
      **Defendants: (Edit to change names, addresses, and other information)**

      % for my_var in other_parties:
        * ${ my_var.name.full(middle="full") }
      % endfor
  - Edit: landlord_check
    button: |
      **Are you suing your former landlord to return a security deposit?**
      ${word(yesno(landlord_check))}
  - Edit: agreement_check
    button: |
      % if other_parties.number_gathered() > 1:
      **Do you have a written agreement with the defendants?**
      % else:
      **Do you have a written agreement with ${other_parties[0].name.full(middle='full')}?**
      % endif
      ${word(yesno(agreement_check))}
  - Edit: attach_check
    button: |
      **Will you attach your written agreement?**
      ${word(yesno(attach_check))}
    show if: agreement_check
  - Edit: attach_explain
    button: |
      **Why can you not attach a copy of your written agreement?**
      ${attach_explain}
    show if: agreement_check == True and attach_check == False
  - Edit: demand_check
    button: |
      % if other_parties.number_gathered() > 1:
      **Have you demanded payment of $${amount_check} and have the defendants failed to pay you the full amount?**
      % else:
      **Have you demanded payment of $${amount_check} and has ${other_parties[0].name.full(middle='full')} failed to pay you the full amount?**
      % endif
      ${word(yesno(demand_check))}
  - Edit: claim_reason
    button: |
      % if other_parties.number_gathered() > 1:
      **Why do the defendants owe you $${amount_check}?**
      % else:
      **Why does ${other_parties[0].name.full(middle='full')} owe you $${amount_check}?**
      % endif
      ${claim_reason}
  - Edit: users[0].name.first
    button: |
      **Your name:**
      ${users[0].name.full(middle='full')}
  - Edit: users[0].address.address
    button: |
      **Your address:**
      ${users[0].address.on_one_line(bare=True)}
  - Edit: users[0].phone_number
    button: |
      **Your phone number:**
      ${phone_number_formatted(users[0].phone_number)}
  - Edit: users[0].email
    button: |
      **Your email address:**
      ${users[0].email}
  - Edit: e_signature
    button: |
      **Do you want to add your electronic signature to your forms?**
      ${word(yesno(e_signature))}
---
continue button field: other_parties.revisit
question: |
    Edit the defendants
subquestion: |
  ${ other_parties.table }

  ${ other_parties.add_action() }
---
table: other_parties.table
rows: other_parties
columns:
  - Name: |
      row_item.name.full(middle="full") if defined("row_item.name.first") else ""
  - Contact, service address, and additional information: |
      action_button_html(url_action(row_item.attr_name("review_defendant_info")), label="Edit", icon="pencil-alt")
delete buttons: True
confirm: True
---
continue button field: x.review_defendant_info
generic object: ALIndividual
question: |
  Edit ${ x.name.full(middle="full") }'s information
review: 
  - Edit: x.name.first
    button: |
      **Defendant name:**
      ${x.name.full(middle='full')}
  - Edit: x.person_type
    button: |
      **Is ${x.name.full(middle='full')} a person or a business?**
      % if x.person_type == "person":
      A person
      % else:
      A business
      % endif
  - Edit: x.address.address
    button: |
      **Defendant address:**
      ${x.address.on_one_linw(bare=True)}
  - Edit: x.agent_check
    button: |
      **Does ${x.name.full(middle='full')} have a registered agent?**
      ${word(yesno(x.agent_check))}
    show if: x.person_type != "person"
  - Edit: x.agent.name.first
    button: |
      **What is ${x.name.full(middle='full')}'s registered agent's name?**
      ${x.agent.name.full(middle='full')}
    show if: x.agent_check
  - Edit: x.same_address
    button: |
      % if x.agent_check == True:
      **Do you want to serve ${x.agent.name.full(middle='full')} at ${x.address.on_one_line(bare=True)}?**
      % else:
      **Do you want to serve ${x.name.full(middle='full')} at ${x.address.on_one_line(bare=True)}?**
      % endif
      ${word(yesno(x.same_address))}
  - Edit: x.service_address.address
    button: |
      % if x.agent_check == True:
      **Where do you want to serve ${x.agent.name.full(middle='full')}?**
      % else:
      **Where do you want to serve ${x.name.full(middle='full')}?**
      % endif
      ${x.service_address.on_one_line(bare=True)}
    show if: x.same_address == False
  - Edit: x.service_phone
    button: |
      % if x.agent_check == True:
      **What is ${x.agent.name.full(middle='full')}'s phone number?**
      % else:
      **What is ${x.name.full(middle='full')}'s phone number?**
      % endif
      ${phone_number_formatted(x.service_phone)}
  - Edit: x.service_email
    button: |
      % if x.agent_check == True:
      **What is ${x.agent.name.full(middle='full')}'s email address?**
      % else:
      **What is ${x.name.full(middle='full')}'s email address?**
      % endif
      ${x.service_email}
  - Edit: x.alt_delivery
    button: |
      % if other_parties[i].agent_check == True:
      **Do you want to list an alternate address, phone number, or email for ${other_parties[i].agent.name.full(middle='full')}?**
      % else:
      **Do you want to list an alternate address, phone number, or email for ${other_parties[i].name.full(middle='full')}?**
      % endif
      ${word(yesno(x.alt_delivery))}
  - Edit: x.alt_service_address.address
    button: |
      % if x.agent_check == True:
      **What is ${x.agent.name.full(middle='full')}'s alternate service address?**
      % else:
      **What is ${x.name.full(middle='full')}'s alternate service address?**
      % endif
      ${x.service_address.on_one_line(bare=True)}
    show if: x.alt_delivery
  - Edit: x.alt_service_phone
    button: |
      % if x.agent_check == True:
      **What is ${x.agent.name.full(middle='full')}'s alternate phone number?**
      % else:
      **What is ${x.name.full(middle='full')}'s alternate phone number?**
      % endif
      ${phone_number_formatted(x.alt_service_phone)}
    show if: x.alt_delivery
  - Edit: x.alt_service_email
    button: |
      % if x.agent_check == True:
      **What is ${x.agent.name.full(middle='full')}'s alternate email address?**
      % else:
      **What is ${x.name.full(middle='full')}'s alternate email address?**
      % endif
      ${x.alt_service_email}
    show if: x.alt_delivery
  - Edit: x.service_method
    button: |
      % if other_parties[i].agent_check == True:
      **How will you serve ${other_parties[i].agent.name.full(middle='full')}?**
      % else:
      **How will you serve ${other_parties[i].name.full(middle='full')}?**
      % endif
      % if x.service_method == "mail":
      By certified or registered mail
      % elif x.service_method == "sheriff":
      By sheriff
      % elif x.service_method == "server":
      By special process server
      % elif x.service_method == "unknown":
      I do not know yet
      % endif
---
id: case review screen
event: section_case
question: |
  About the case
subquestion: |
  Edit your answers below.
review:
  - Edit: amount_check
    button: |
      **You are suing for:**
      $${amount_check}  
  - Edit: filing_location.county_number
    button: |
      **You are filing in:**
      ${end_in_county(filing_location.county)}
  - Edit: landlord_check
    button: |
      **Are you suing your former landlord to return a security deposit?**
      ${word(yesno(landlord_check))}
  - Edit: agreement_check
    button: |
      % if other_parties.number_gathered() > 1:
      **Do you have a written agreement with the defendants?**
      % else:
      **Do you have a written agreement with ${other_parties[0].name.full(middle='full')}?**
      % endif
      ${word(yesno(agreement_check))}
  - Edit: attach_check
    button: |
      **Will you attach your written agreement?**
      ${word(yesno(attach_check))}
    show if: agreement_check
  - Edit: attach_explain
    button: |
      **Why can you not attach a copy of your written agreement?**
      ${attach_explain}
    show if: agreement_check == True and attach_check == False
  - Edit: demand_check
    button: |
      % if other_parties.number_gathered() > 1:
      **Have you demanded payment of $${amount_check} and have the defendants failed to pay you the full amount?**
      % else:
      **Have you demanded payment of $${amount_check} and has ${other_parties[0].name.full(middle='full')} failed to pay you the full amount?**
      % endif
      ${word(yesno(demand_check))}
  - Edit: claim_reason
    button: |
      % if other_parties.number_gathered() > 1:
      **Why do the defendants owe you $${amount_check}?**
      % else:
      **Why does ${other_parties[0].name.full(middle='full')} owe you $${amount_check}?**
      % endif
      ${claim_reason}
---
id: defendants review screen
event: section_defendants
question: |
  Defendants
subquestion: |
  Edit your answers below.
review:
  - Edit: other_parties.revisit
    button: |
      **Defendants: (Edit to change names, addresses, and other information)**

      % for my_var in other_parties:
        * ${ my_var.name.full(middle="full") }
      % endfor
  - Edit: demand_check
    button: |
      % if other_parties.number_gathered() > 1:
      **Have you demanded payment of $${amount_check} and have the defendants failed to pay you the full amount?**
      % else:
      **Have you demanded payment of $${amount_check} and has ${other_parties[0].name.full(middle='full')} failed to pay you the full amount?**
      % endif
      ${word(yesno(demand_check))}
---
id: user review screen
event: section_about_you
question: |
  About you
subquestion: |
  Edit your answers below.
review:
  - Edit: users[0].name.first
    button: |
      **Your name:**
      ${users[0].name.full(middle='full')}
  - Edit: users[0].address.address
    button: |
      **Your address:**
      ${users[0].address.on_one_line(bare=True)}
  - Edit: users[0].phone_number
    button: |
      **Your phone number:**
      ${phone_number_formatted(users[0].phone_number)}
  - Edit: users[0].email
    button: |
      **Your email address:**
      ${users[0].email}
  - Edit: e_signature
    button: |
      **Do you want to add your electronic signature to your forms?**
      ${word(yesno(e_signature))}